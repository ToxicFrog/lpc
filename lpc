#!/usr/bin/env lua5.2

BASEDIR = arg[0]:gsub("[^/]+$", '')
if not BASEDIR:match('^/') then
  BASEDIR = './' .. BASEDIR
end
package.path = package.path
  ..";"..BASEDIR.."/lib/?.lua"
  ..";"..BASEDIR.."/lib/?/init.lua"

require "util.flags"
require "util.logging"
require "util.string"
require "util.io"

flags.register ("out", "o") {
  help = "The file to write the output to.";
  type = flags.string;
}

flags.register ("cache") {
  help = "The file to store lpc cache data in between runs.";
  type = flags.string;
  default = "./.lpc-cache";
}

flags.register ("help", "h", "?") {
  help = "This text.";
}

lp = {}

require "macros"
require "packages"

flags.parse(...)

if flags.parsed.help then
  print("Usage: lpc [options] input.file")
  print("Options:")
  print(flags.help())
  os.exit(0)
end

lp.cache = require('cache').open(flags.parsed.cache)

local postprocessors = {}
function lp.postprocess(f)
  table.insert(postprocessors, f)
end

FILE = assert(flags.parsed[1])
for _,package in ipairs(flags.parsed.package) do
  lp.use(package:split(','))
end

log.info('Processing file %s', FILE)
local data = lp.expand(io.readfile(FILE))

log.info('Running postprocessing functions.')
for _,fn in ipairs(postprocessors) do
  data = fn(data) or data
end

io.writefile(flags.parsed.out, data)
log.info('Written to %s', flags.parsed.out)
